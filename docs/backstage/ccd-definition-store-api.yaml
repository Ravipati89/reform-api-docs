apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: ccd-definition-store-api
  description: CCD Definition Store API
spec:
  type: openapi
  system: ccd
  lifecycle: production
  owner: dcd_ccd
  definition: |
    openapi: 3.0.0
    info:
      description: Api Documentation
      version: "1.0"
      title: Api Documentation
      termsOfService: urn:tos
      contact: {}
      license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0
    tags:
      - name: admin-web-authorization-controller
        description: Admin Web Authorization Controller
      - name: base-type-controller
        description: Base Type Controller
      - name: case-definition-controller
        description: Case Definition Controller
      - name: display-api-controller
        description: Display Api Controller
      - name: draft-definition-controller
        description: Draft Definition Controller
      - name: idam-profile-controller
        description: Idam Profile Controller
      - name: idam-user-role-controller
        description: Idam User Role Controller
      - name: import-audit-controller
        description: Import Audit Controller
      - name: import-controller
        description: Import Controller
      - name: proxy-controller
        description: Proxy Controller
      - name: user-role-controller
        description: User Role Controller
    paths:
      /api/base-types:
        get:
          tags:
            - base-type-controller
          summary: Fetch all Base Types
          operationId: getBaseTypesUsingGET
          responses:
            "200":
              description: All valid base types
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/FieldType"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/data/case-type/{ctid}/version":
        get:
          tags:
            - case-definition-controller
          summary: Gets the current version of a Case Type Schema
          operationId: dataCaseTypeVersionGetUsingGET
          parameters:
            - name: ctid
              in: path
              description: Case Type ID
              required: true
              schema:
                type: string
          responses:
            "200":
              description: version information
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/CaseTypeVersionInformation"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/data/case-type/{id}":
        get:
          tags:
            - case-definition-controller
          summary: Fetch a Case Type Schema
          description: |
            Returns the schema of a single case type.
          operationId: dataCaseTypeIdGetUsingGET
          parameters:
            - name: id
              in: path
              description: Case Type ID
              required: true
              schema:
                type: string
          responses:
            "200":
              description: A Case Type Schema
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/CaseType"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/data/caseworkers/{uid}/jurisdictions/{jid}/case-types/{ctid}":
        get:
          tags:
            - case-definition-controller
          summary: Fetch a Case Type Schema
          description: |
            Returns the schema of a single case type.
          operationId: dataCaseworkerIdAndJurisdictionIdCaseTypeGetUsingGET
          parameters:
            - name: ctid
              in: path
              description: ID for Case Type
              required: true
              schema:
                type: string
            - name: jid
              in: path
              description: ID for a Jurisdiction
              required: true
              schema:
                type: string
            - name: uid
              in: path
              description: ID for a Caseworker
              required: true
              schema:
                type: string
          responses:
            "200":
              description: A Case Type Schema
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/CaseType"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/data/caseworkers/{uid}/jurisdictions/{jid}/case-types/{ctid}/access/profile/roles":
        get:
          tags:
            - case-definition-controller
          summary: Get Role assignment for a case type
          description: |
            Returns list of case roles of a single case type.
          operationId: getRoleToAccessProfilesUsingGET
          parameters:
            - name: ctid
              in: path
              description: ID for Case Type
              required: true
              schema:
                type: string
            - name: jid
              in: path
              description: ID for a Jurisdiction
              required: true
              schema:
                type: string
            - name: uid
              in: path
              description: ID for a Caseworker
              required: true
              schema:
                type: string
          responses:
            "200":
              description: List of Role assignments
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/RoleAssignment"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/data/caseworkers/{uid}/jurisdictions/{jid}/case-types/{ctid}/roles":
        get:
          tags:
            - case-definition-controller
          summary: Get Case Roles for a case type
          description: |
            Returns list of case roles of a single case type.
          operationId: getCaseRolesUsingGET
          parameters:
            - name: ctid
              in: path
              description: ID for Case Type
              required: true
              schema:
                type: string
            - name: jid
              in: path
              description: ID for a Jurisdiction
              required: true
              schema:
                type: string
            - name: uid
              in: path
              description: ID for a Caseworker
              required: true
              schema:
                type: string
          responses:
            "200":
              description: List of Case Roles
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/CaseRole"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /api/data/jurisdictions:
        get:
          tags:
            - case-definition-controller
          summary: Get jurisdiction details
          operationId: findJurisdictionsUsingGET
          parameters:
            - name: ids
              in: query
              description: list of jurisdiction references
              required: true
              explode: true
              schema:
                type: array
                items:
                  type: string
          responses:
            "200":
              description: List of jurisdictions
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Jurisdiction"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/data/jurisdictions/{jurisdiction_id}/case-type":
        get:
          tags:
            - case-definition-controller
          summary: Get case types
          description: Get the case types as a list with optional jurisdiction filter
          operationId: dataJurisdictionsJurisdictionIdCaseTypeGetUsingGET
          parameters:
            - name: jurisdiction_id
              in: path
              description: ID for a Jurisdiction
              required: true
              schema:
                type: string
          responses:
            "200":
              description: List of Case Types
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/CaseType"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /api/display/banners:
        get:
          tags:
            - display-api-controller
          summary: Get Banner details for list of jurisdictions
          operationId: getBannersUsingGET
          parameters:
            - name: ids
              in: query
              description: list of jurisdiction references
              required: true
              explode: true
              schema:
                type: array
                items:
                  type: string
          responses:
            "200":
              description: List of Banners
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/BannersResult"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/display/challenge-questions/case-type/{ctid}/question-groups/{id}":
        get:
          tags:
            - display-api-controller
          summary: Get challenge questions
          operationId: getChallengeQuestionsUsingGET
          parameters:
            - name: ctid
              in: path
              description: Case Type ID
              required: true
              schema:
                type: string
            - name: id
              in: path
              description: Challenge Question ID
              required: true
              schema:
                type: string
          responses:
            "200":
              description: List of challenge questions for requested criteria
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/ChallengeQuestionsResult"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /api/display/jurisdiction-ui-configs:
        get:
          tags:
            - display-api-controller
          summary: Get UI config details for list of jurisdictions
          operationId: getJurisdictionUiConfigsUsingGET
          parameters:
            - name: ids
              in: query
              description: list of jurisdiction references
              required: true
              explode: true
              schema:
                type: array
                items:
                  type: string
          responses:
            "200":
              description: List of Jurisdiction UI Configs
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/JurisdictionUiConfigResult"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/display/search-cases-result-fields/{id}":
        get:
          tags:
            - display-api-controller
          summary: Fetch the UI definition for the search cases result for a given Case Type
          operationId: displaySearchCasesResultIdGetUsingGET
          parameters:
            - name: id
              in: path
              description: Case Type ID
              required: true
              schema:
                type: string
            - name: use_case
              in: query
              description: use_case
              required: false
              schema:
                type: string
          responses:
            "200":
              description: Search Case Result Fields
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/SearchCasesResult"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/display/search-input-definition/{id}":
        get:
          tags:
            - display-api-controller
          summary: Fetch the UI definition for the search inputs for a given Case Type
          operationId: displaySearchInputDefinitionIdGetUsingGET
          parameters:
            - name: id
              in: path
              description: Case Type ID
              required: true
              schema:
                type: string
          responses:
            "200":
              description: A Search input definition
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/SearchInputDefinition"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/display/search-result-definition/{id}":
        get:
          tags:
            - display-api-controller
          summary: Fetch the UI definition for the search result fields for a given Case
            Type
          operationId: displaySearchResultDefinitionIdGetUsingGET
          parameters:
            - name: id
              in: path
              description: Case Type ID
              required: true
              schema:
                type: string
          responses:
            "200":
              description: A Search result definition
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/SearchResultDefinition"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/display/tab-structure/{id}":
        get:
          tags:
            - display-api-controller
          summary: Fetch a Case Tab Collection for a given Case Type
          description: |
            Returns the schema of a single case type.
          operationId: displayTabStructureIdGetUsingGET
          parameters:
            - name: id
              in: path
              description: Case Type ID
              required: true
              schema:
                type: string
          responses:
            "200":
              description: A Case Tab Collection
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/CaseTabCollection"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/display/wizard-page-structure/case-types/{ctid}/event-triggers/{etid}":
        get:
          tags:
            - display-api-controller
          summary: Fetch a Case Wizard Page Collection for a given Case Type
          description: |
            Returns the schema of a single case type.
          operationId: displayWizardPageStructureIdGetUsingGET
          parameters:
            - name: ctid
              in: path
              description: Case Type ID
              required: true
              schema:
                type: string
            - name: etid
              in: path
              description: Event Reference
              required: true
              schema:
                type: string
          responses:
            "200":
              description: A Case Wizard Page Collection
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/WizardPageCollection"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/display/work-basket-definition/{id}":
        get:
          tags:
            - display-api-controller
          summary: Fetch the UI definition for the work basket for a given Case Type
          operationId: displayWorkBasketDefinitionIdGetUsingGET
          parameters:
            - name: id
              in: path
              description: Case Type ID
              required: true
              schema:
                type: string
          responses:
            "200":
              description: Work Basket Result
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/WorkBasketResult"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/display/work-basket-input-definition/{id}":
        get:
          tags:
            - display-api-controller
          summary: Fetch the UI definition for the work basket inputs for a given Case Type
          operationId: displayWorkBasketInputDefinitionIdGetUsingGET
          parameters:
            - name: id
              in: path
              description: Case Type ID
              required: true
              schema:
                type: string
          responses:
            "200":
              description: A Work Basket input definition
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/SearchInputDefinition"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /api/draft:
        get:
          tags:
            - draft-definition-controller
          summary: Finds a draft Definition by jurisdiction
          description: Finds a draft Definition for the specified Jurisdiction
          operationId: findByJurisdictionIdAndVersionUsingGET
          parameters:
            - name: jurisdiction
              in: query
              description: jurisdiction
              required: true
              schema:
                type: string
            - name: version
              in: query
              description: version
              required: false
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: Draft Definition found
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Definition"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
        post:
          tags:
            - draft-definition-controller
          summary: Creates a draft Definition
          description: Creates a draft Definition for the specified Jurisdiction, incrementing
            the version number each time
          operationId: draftDefinitionCreateUsingPOST
          requestBody:
            $ref: "#/components/requestBodies/Definition"
          responses:
            "201":
              description: Draft Definition created
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Definition"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /api/draft/save:
        put:
          tags:
            - draft-definition-controller
          summary: Saves a draft Definition
          description: Saves a draft Definition for the specified Jurisdiction, incrementing
            the version number each time
          operationId: saveDraftDefinitionUsingPUT
          requestBody:
            $ref: "#/components/requestBodies/Definition"
          responses:
            "200":
              description: Draft Definition created
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Definition"
            "201":
              description: Created
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/draft/{jurisdiction}/{version}":
        delete:
          tags:
            - draft-definition-controller
          summary: Deletes a draft Definition
          description: The draft definition for the specified Jurisdiction is marked as deleted
          operationId: draftDefinitionDeleteUsingDELETE
          parameters:
            - name: jurisdiction
              in: path
              description: jurisdiction
              required: true
              schema:
                type: string
            - name: version
              in: path
              description: version
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "204":
              description: Draft Definition deleted
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
      /api/drafts:
        get:
          tags:
            - draft-definition-controller
          summary: Finds a draft Definition by jurisdiction
          description: Finds a draft Definition for the specified Jurisdiction
          operationId: findByJurisdictionIdUsingGET
          parameters:
            - name: jurisdiction
              in: query
              description: jurisdiction
              required: true
              schema:
                type: string
          responses:
            "200":
              description: Draft Definition found
              content:
                "*/*":
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Definition"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /api/idam/adminweb/authorization:
        get:
          tags:
            - admin-web-authorization-controller
          summary: Gets admin web authorization from current logged in user
          operationId: getAdminWebAuthorizationUsingGET
          responses:
            "200":
              description: Admin web authorization
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/AdminWebAuthorization"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /api/idam/profile:
        get:
          tags:
            - idam-profile-controller
          summary: Gets idam profile from current logged in user
          operationId: getIdamProfileUsingGET
          responses:
            "200":
              description: A Case Type Schema
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/IdamProperties"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /api/idam/profile/roles:
        get:
          tags:
            - idam-user-role-controller
          summary: Gets idam profile from current logged in user
          operationId: getIdamProfileUsingGET_1
          responses:
            "200":
              description: A Case Type Schema
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/IdamProperties"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /api/import-audits:
        get:
          tags:
            - import-audit-controller
          summary: Fetches import audits
          operationId: fetchAllAuditsUsingGET
          responses:
            "200":
              description: Import audits
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/ImportAudit"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /api/user-role:
        get:
          tags:
            - user-role-controller
          summary: Get a user profile
          operationId: userRoleGetUsingGET
          parameters:
            - name: role
              in: query
              description: role
              required: true
              schema:
                type: string
                format: byte
          responses:
            "200":
              description: User role is found
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/UserRole"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Unable to find user role
        post:
          tags:
            - user-role-controller
          summary: Update a user role
          description: a user role is created if it does not exist
          operationId: userRoleCreateUsingPOST
          requestBody:
            $ref: "#/components/requestBodies/UserRole"
          responses:
            "201":
              description: Created
            "205":
              description: User role is updated successfully and the user agent SHOULD reset
                the document view
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/UserRole"
            "215":
              description: User role is created
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/UserRole"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
            "409":
              description: Bad request, for example, incorrect data
        put:
          tags:
            - user-role-controller
          summary: Update a user role
          description: a user role is created if it does not exist
          operationId: userRolePutUsingPUT
          requestBody:
            $ref: "#/components/requestBodies/UserRole"
          responses:
            "201":
              description: Created
            "205":
              description: User role is updated successfully and the user agent SHOULD reset
                the document view
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/UserRole"
            "215":
              description: User role is created
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/UserRole"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
            "409":
              description: Bad request, for example, incorrect data
      /api/user-roles:
        get:
          tags:
            - user-role-controller
          summary: Get All user role definitions
          operationId: getAllUserRolesUsingGET
          responses:
            "200":
              description: User Roles Response is returned
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserRole"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      "/api/user-roles/{roles}":
        get:
          tags:
            - user-role-controller
          summary: Get user role definitions given as comma separated values
          operationId: getUserRolesUsingGET
          parameters:
            - name: roles
              in: path
              description: Roles
              required: true
              schema:
                type: string
          responses:
            "200":
              description: User Role Response is returned
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserRole"
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /import:
        post:
          tags:
            - import-controller
          summary: processUpload
          operationId: processUploadUsingPOST
          requestBody:
            content:
              multipart/form-data:
                schema:
                  type: string
                  format: binary
            description: file
            required: true
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/ResponseEntity"
            "201":
              description: Created
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
      /proxy:
        post:
          tags:
            - proxy-controller
          summary: proxyRequest
          operationId: proxyRequestUsingPOST
          requestBody:
            content:
              application/json:
                schema:
                  type: string
            description: url
            required: true
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                    type: string
            "201":
              description: Created
            "401":
              description: Unauthorized
            "403":
              description: Forbidden
            "404":
              description: Not Found
    servers:
      - url: //localhost/
    components:
      requestBodies:
        Definition:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Definition"
          description: Draft Definition
          required: true
        UserRole:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRole"
          description: user role
          required: true
      schemas:
        AccessControlList:
          type: object
          properties:
            create:
              type: boolean
            delete:
              type: boolean
            read:
              type: boolean
            role:
              type: string
            update:
              type: boolean
          title: AccessControlList
        AdminWebAuthorization:
          type: object
          properties:
            canImportDefinition:
              type: boolean
            canManageDefinition:
              type: boolean
            canManageUserProfile:
              type: boolean
            canManageUserRole:
              type: boolean
          title: AdminWebAuthorization
        Banner:
          type: object
          properties:
            bannerDescription:
              type: string
            bannerEnabled:
              type: boolean
            bannerUrl:
              type: string
            bannerUrlText:
              type: string
            id:
              type: string
          title: Banner
        BannersResult:
          type: object
          properties:
            banners:
              type: array
              items:
                $ref: "#/components/schemas/Banner"
          title: BannersResult
        CaseEvent:
          type: object
          required:
            - id
            - name
          properties:
            acls:
              type: array
              items:
                $ref: "#/components/schemas/AccessControlList"
            callback_url_about_to_start_event:
              type: string
            callback_url_about_to_submit_event:
              type: string
            callback_url_submitted_event:
              type: string
            can_save_draft:
              type: boolean
            case_fields:
              type: array
              items:
                $ref: "#/components/schemas/CaseEventField"
            description:
              type: string
            end_button_label:
              type: string
            event_enabling_condition:
              type: string
            id:
              type: string
            name:
              type: string
            order:
              type: integer
              format: int32
            post_states:
              type: array
              items:
                $ref: "#/components/schemas/EventPostState"
            pre_states:
              type: array
              items:
                type: string
            publish:
              type: boolean
              description: flag to publish an event to message queue
            retries_timeout_about_to_start_event:
              type: array
              items:
                type: integer
                format: int32
            retries_timeout_url_about_to_submit_event:
              type: array
              items:
                type: integer
                format: int32
            retries_timeout_url_submitted_event:
              type: array
              items:
                type: integer
                format: int32
            security_classification:
              type: string
              enum:
                - PRIVATE
                - PUBLIC
                - RESTRICTED
            show_event_notes:
              type: boolean
            show_summary:
              type: boolean
          title: CaseEvent
        CaseEventField:
          type: object
          required:
            - case_field_id
          properties:
            case_field_id:
              type: string
              description: Foreign key to CaseField.id
            case_fields_complex:
              type: array
              items:
                $ref: "#/components/schemas/CaseEventFieldComplex"
            default_value:
              type: string
              description: allows services to define the default value of top level case fields
            display_context:
              type: string
              description: whether this field is optional, mandatory or read only for this event
            display_context_parameter:
              type: string
            hint_text:
              type: string
            label:
              type: string
            publish:
              type: boolean
              description: whenever we want to publish this event field
            publish_as:
              type: string
              description: the form of this event field we want to publish
            retain_hidden_value:
              type: boolean
              description: whether to retain value of this field, is dependant on there being a
                show condition
            show_condition:
              type: string
              description: Show Condition expression for this field
            show_summary_change_option:
              type: boolean
            show_summary_content_option:
              type: integer
              format: int32
          title: CaseEventField
        CaseEventFieldComplex:
          type: object
          properties:
            defaultValue:
              type: string
            displayContext:
              type: string
              enum:
                - COMPLEX
                - MANDATORY
                - OPTIONAL
                - READONLY
            hint:
              type: string
            label:
              type: string
            order:
              type: integer
              format: int32
            publish:
              type: boolean
            publishAs:
              type: string
            reference:
              type: string
            showCondition:
              type: string
          title: CaseEventFieldComplex
        CaseEventLite:
          type: object
          properties:
            acls:
              type: array
              items:
                $ref: "#/components/schemas/AccessControlList"
            description:
              type: string
            id:
              type: string
            name:
              type: string
            pre_states:
              type: array
              items:
                type: string
          title: CaseEventLite
        CaseField:
          type: object
          required:
            - field_type
            - id
            - label
          properties:
            acls:
              type: array
              items:
                $ref: "#/components/schemas/AccessControlList"
            case_type_id:
              type: string
              description: Foriegn key to the case type as fields should not work across
            complexACLs:
              type: array
              items:
                $ref: "#/components/schemas/ComplexACL"
            display_context_parameter:
              type: string
            field_type:
              $ref: "#/components/schemas/FieldType"
            hidden:
              type: boolean
            hint_text:
              type: string
            id:
              type: string
              description: The id of the case field
            label:
              type: string
            live_from:
              type: string
            live_until:
              type: string
            metadata:
              type: boolean
            order:
              type: integer
              format: int32
            retain_hidden_value:
              type: boolean
            security_classification:
              type: string
              description: Gov security level of the data (official, top secret etc)
            show_condition:
              type: string
          title: CaseField
        CaseRole:
          type: object
          required:
            - id
          properties:
            description:
              type: string
            id:
              type: string
            name:
              type: string
              description: Short name to display.
          title: CaseRole
          description: Case role of a Case Type
        CaseState:
          type: object
          required:
            - id
          properties:
            acls:
              type: array
              description: State Access Control Lists
              items:
                $ref: "#/components/schemas/AccessControlList"
            description:
              type: string
            id:
              type: string
            name:
              type: string
              description: Short name to display.
            order:
              type: integer
              format: int32
            title_display:
              type: string
              description: Title label to be displayed for state
          title: CaseState
        CaseTabCollection:
          type: object
          required:
            - case_type_id
            - tabs
          properties:
            case_type_id:
              type: string
              description: Unique identifier for a Case Type.
            channels:
              type: array
              description: The channels this tab is targetted at
              items:
                type: string
            tabs:
              type: array
              items:
                $ref: "#/components/schemas/CaseTypeTab"
          title: CaseTabCollection
        CaseType:
          type: object
          properties:
            acls:
              type: array
              items:
                $ref: "#/components/schemas/AccessControlList"
            callback_get_case_url:
              type: string
            case_fields:
              type: array
              items:
                $ref: "#/components/schemas/CaseField"
            description:
              type: string
            events:
              type: array
              items:
                $ref: "#/components/schemas/CaseEvent"
            id:
              type: string
            jurisdiction:
              $ref: "#/components/schemas/Jurisdiction"
            name:
              type: string
            printable_document_url:
              type: string
            retries_get_case_url:
              type: array
              items:
                type: integer
                format: int32
            roleToAccessProfiles:
              type: array
              items:
                $ref: "#/components/schemas/RoleToAccessProfiles"
            searchAliasFields:
              type: array
              items:
                $ref: "#/components/schemas/SearchAliasField"
            searchCriterias:
              type: array
              items:
                $ref: "#/components/schemas/SearchCriteria"
            searchParties:
              type: array
              items:
                $ref: "#/components/schemas/SearchParty"
            security_classification:
              type: string
              enum:
                - PRIVATE
                - PUBLIC
                - RESTRICTED
            states:
              type: array
              items:
                $ref: "#/components/schemas/CaseState"
            version:
              $ref: "#/components/schemas/Version"
          title: CaseType
        CaseTypeLite:
          type: object
          properties:
            acls:
              type: array
              items:
                $ref: "#/components/schemas/AccessControlList"
            description:
              type: string
            events:
              type: array
              items:
                $ref: "#/components/schemas/CaseEventLite"
            id:
              type: string
            name:
              type: string
            states:
              type: array
              items:
                $ref: "#/components/schemas/CaseState"
          title: CaseTypeLite
        CaseTypeTab:
          type: object
          properties:
            id:
              type: string
            label:
              type: string
            order:
              type: integer
              format: int32
            role:
              type: string
            show_condition:
              type: string
            tab_fields:
              type: array
              items:
                $ref: "#/components/schemas/CaseTypeTabField"
          title: CaseTypeTab
        CaseTypeTabField:
          type: object
          properties:
            case_field:
              $ref: "#/components/schemas/CaseField"
            display_context_parameter:
              type: string
            order:
              type: integer
              format: int32
            show_condition:
              type: string
          title: CaseTypeTabField
        CaseTypeVersionInformation:
          type: object
          properties:
            version:
              type: integer
              format: int32
          title: CaseTypeVersionInformation
        ChallengeQuestion:
          type: object
          properties:
            answer_field:
              type: string
            answer_field_type:
              $ref: "#/components/schemas/FieldType"
            case_type_id:
              type: string
            challenge_question_id:
              type: string
            display_context_parameter:
              type: string
            order:
              type: integer
              format: int32
            question_id:
              type: string
            question_text:
              type: string
          title: ChallengeQuestion
        ChallengeQuestionsResult:
          type: object
          properties:
            questions:
              type: array
              items:
                $ref: "#/components/schemas/ChallengeQuestion"
          title: ChallengeQuestionsResult
        ComplexACL:
          type: object
          properties:
            create:
              type: boolean
            delete:
              type: boolean
            listElementCode:
              type: string
            read:
              type: boolean
            role:
              type: string
            update:
              type: boolean
          title: ComplexACL
        Definition:
          type: object
          properties:
            author:
              type: string
            case_types:
              type: string
            created_at:
              type: string
              format: date-time
            data:
              type: object
              additionalProperties:
                $ref: "#/components/schemas/JsonNode"
            deleted:
              type: boolean
            description:
              type: string
            jurisdiction:
              $ref: "#/components/schemas/Jurisdiction"
            last_modified:
              type: string
              format: date-time
            status:
              type: string
              enum:
                - DRAFT
                - PUBLISHED
            version:
              type: integer
              format: int32
          title: Definition
        EventPostState:
          type: object
          properties:
            enabling_condition:
              type: string
            post_state_reference:
              type: string
            priority:
              type: integer
              format: int32
          title: EventPostState
        FieldType:
          type: object
          properties:
            collection_field_type:
              $ref: "#/components/schemas/FieldType"
            complex_fields:
              type: array
              items:
                $ref: "#/components/schemas/CaseField"
            fixed_list_items:
              type: array
              items:
                $ref: "#/components/schemas/FixedListItem"
            id:
              type: string
            max:
              type: string
            min:
              type: string
            regular_expression:
              type: string
            type:
              type: string
          title: FieldType
        FixedListItem:
          type: object
          properties:
            code:
              type: string
            label:
              type: string
            order:
              type: integer
              format: int32
          title: FixedListItem
        IdamProperties:
          type: object
          properties:
            defaultService:
              type: string
            email:
              type: string
            forename:
              type: string
            id:
              type: string
            roles:
              type: array
              items:
                type: string
            surname:
              type: string
          title: IdamProperties
        ImportAudit:
          type: object
          properties:
            case_type:
              type: string
            date_imported:
              type: string
            filename:
              type: string
            order:
              type: string
              format: date-time
            uri:
              type: string
              format: uri
            who_imported:
              type: string
          title: ImportAudit
        JsonNode:
          type: object
          title: JsonNode
        Jurisdiction:
          type: object
          required:
            - id
            - name
          properties:
            case_types:
              type: array
              items:
                $ref: "#/components/schemas/CaseTypeLite"
            description:
              type: string
            id:
              type: string
            live_from:
              type: string
            live_until:
              type: string
              format: date-time
            name:
              type: string
          title: Jurisdiction
        JurisdictionUiConfig:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            shuttered:
              type: boolean
          title: JurisdictionUiConfig
        JurisdictionUiConfigResult:
          type: object
          properties:
            configs:
              type: array
              items:
                $ref: "#/components/schemas/JurisdictionUiConfig"
          title: JurisdictionUiConfigResult
        ResponseEntity:
          type: object
          properties:
            body:
              type: object
            statusCode:
              type: string
              enum:
                - ACCEPTED
                - ALREADY_REPORTED
                - BAD_GATEWAY
                - BAD_REQUEST
                - BANDWIDTH_LIMIT_EXCEEDED
                - CHECKPOINT
                - CONFLICT
                - CONTINUE
                - CREATED
                - DESTINATION_LOCKED
                - EXPECTATION_FAILED
                - FAILED_DEPENDENCY
                - FORBIDDEN
                - FOUND
                - GATEWAY_TIMEOUT
                - GONE
                - HTTP_VERSION_NOT_SUPPORTED
                - IM_USED
                - INSUFFICIENT_SPACE_ON_RESOURCE
                - INSUFFICIENT_STORAGE
                - INTERNAL_SERVER_ERROR
                - I_AM_A_TEAPOT
                - LENGTH_REQUIRED
                - LOCKED
                - LOOP_DETECTED
                - METHOD_FAILURE
                - METHOD_NOT_ALLOWED
                - MOVED_PERMANENTLY
                - MOVED_TEMPORARILY
                - MULTIPLE_CHOICES
                - MULTI_STATUS
                - NETWORK_AUTHENTICATION_REQUIRED
                - NON_AUTHORITATIVE_INFORMATION
                - NOT_ACCEPTABLE
                - NOT_EXTENDED
                - NOT_FOUND
                - NOT_IMPLEMENTED
                - NOT_MODIFIED
                - NO_CONTENT
                - OK
                - PARTIAL_CONTENT
                - PAYLOAD_TOO_LARGE
                - PAYMENT_REQUIRED
                - PERMANENT_REDIRECT
                - PRECONDITION_FAILED
                - PRECONDITION_REQUIRED
                - PROCESSING
                - PROXY_AUTHENTICATION_REQUIRED
                - REQUESTED_RANGE_NOT_SATISFIABLE
                - REQUEST_ENTITY_TOO_LARGE
                - REQUEST_HEADER_FIELDS_TOO_LARGE
                - REQUEST_TIMEOUT
                - REQUEST_URI_TOO_LONG
                - RESET_CONTENT
                - SEE_OTHER
                - SERVICE_UNAVAILABLE
                - SWITCHING_PROTOCOLS
                - TEMPORARY_REDIRECT
                - TOO_EARLY
                - TOO_MANY_REQUESTS
                - UNAUTHORIZED
                - UNAVAILABLE_FOR_LEGAL_REASONS
                - UNPROCESSABLE_ENTITY
                - UNSUPPORTED_MEDIA_TYPE
                - UPGRADE_REQUIRED
                - URI_TOO_LONG
                - USE_PROXY
                - VARIANT_ALSO_NEGOTIATES
            statusCodeValue:
              type: integer
              format: int32
          title: ResponseEntity
        RoleAssignment:
          type: object
          required:
            - id
          properties:
            id:
              type: string
            name:
              type: string
              description: Short name to display.
          title: RoleAssignment
          description: RoleAssignment of a Case Type
        RoleToAccessProfiles:
          type: object
          properties:
            access_profiles:
              type: string
            authorisations:
              type: string
            case_access_categories:
              type: string
            case_type_id:
              type: string
            disabled:
              type: boolean
            live_from:
              type: string
              format: date-time
            live_to:
              type: string
              format: date-time
            read_only:
              type: boolean
            role_name:
              type: string
          title: RoleToAccessProfiles
        SearchAliasField:
          type: object
          properties:
            caseFieldPath:
              type: string
            caseTypeId:
              type: string
            fieldType:
              $ref: "#/components/schemas/FieldType"
            id:
              type: string
          title: SearchAliasField
        SearchCasesResult:
          type: object
          properties:
            case_type_id:
              type: string
            fields:
              type: array
              items:
                $ref: "#/components/schemas/SearchCasesResultField"
          title: SearchCasesResult
        SearchCasesResultField:
          type: object
          properties:
            case_field_element_path:
              type: string
            case_field_id:
              type: string
            case_type_id:
              type: string
            display_context_parameter:
              type: string
            label:
              type: string
            metadata:
              type: boolean
            order:
              type: integer
              format: int32
            role:
              type: string
            sort_order:
              $ref: "#/components/schemas/SortOrder"
            use_case:
              type: string
          title: SearchCasesResultField
        SearchCriteria:
          type: object
          properties:
            case_type_id:
              type: string
            live_from:
              type: string
              format: date-time
            live_to:
              type: string
              format: date-time
            other_case_reference:
              type: string
          title: SearchCriteria
        SearchInputDefinition:
          type: object
          properties:
            case_type_id:
              type: string
            fields:
              type: array
              items:
                $ref: "#/components/schemas/SearchInputField"
          title: SearchInputDefinition
        SearchInputField:
          type: object
          properties:
            case_field_element_path:
              type: string
            case_field_id:
              type: string
            display_context_parameter:
              type: string
            label:
              type: string
            order:
              type: integer
              format: int32
            role:
              type: string
            show_condition:
              type: string
          title: SearchInputField
        SearchParty:
          type: object
          properties:
            case_type_id:
              type: string
            live_from:
              type: string
              format: date-time
            live_to:
              type: string
              format: date-time
            search_party_address_line1:
              type: string
            search_party_collection_field_name:
              type: string
            search_party_dob:
              type: string
            search_party_dod:
              type: string
            search_party_email_address:
              type: string
            search_party_name:
              type: string
            search_party_post_code:
              type: string
          title: SearchParty
        SearchResultDefinition:
          type: object
          properties:
            case_type_id:
              type: string
            fields:
              type: array
              items:
                $ref: "#/components/schemas/SearchResultsField"
          title: SearchResultDefinition
        SearchResultsField:
          type: object
          properties:
            case_field_element_path:
              type: string
            case_field_id:
              type: string
            case_type_id:
              type: string
            display_context_parameter:
              type: string
            label:
              type: string
            metadata:
              type: boolean
            order:
              type: integer
              format: int32
            role:
              type: string
            sort_order:
              $ref: "#/components/schemas/SortOrder"
          title: SearchResultsField
        SortOrder:
          type: object
          properties:
            direction:
              type: string
            priority:
              type: integer
              format: int32
          title: SortOrder
        UserRole:
          type: object
          properties:
            created_at:
              type: string
            id:
              type: integer
              format: int32
            live_from:
              type: string
              pattern: ^\d\d\d\d-\d\d-\d\d$
            live_to:
              type: string
              pattern: ^\d\d\d\d-\d\d-\d\d$
            role:
              type: string
            security_classification:
              type: string
              enum:
                - PRIVATE
                - PUBLIC
                - RESTRICTED
          title: UserRole
        Version:
          type: object
          required:
            - live_from
            - number
          properties:
            live_from:
              type: string
              description: Date and time from when this version is valid from
            live_until:
              type: string
              format: date-time
              description: Date and time this version is to be retired
            number:
              type: integer
              format: int32
              description: Sequantial version number
          title: Version
        WizardPage:
          type: object
          properties:
            callback_url_mid_event:
              type: string
            id:
              type: string
            label:
              type: string
            order:
              type: integer
              format: int32
            retries_timeout_mid_event:
              type: array
              items:
                type: integer
                format: int32
            show_condition:
              type: string
            wizard_page_fields:
              type: array
              items:
                $ref: "#/components/schemas/WizardPageField"
          title: WizardPage
        WizardPageCollection:
          type: object
          required:
            - case_type_id
            - event_id
            - wizard_pages
          properties:
            case_type_id:
              type: string
              description: Unique identifier for a Case Type.
            event_id:
              type: string
              description: Event Trigger Id
            wizard_pages:
              type: array
              items:
                $ref: "#/components/schemas/WizardPage"
          title: WizardPageCollection
        WizardPageComplexFieldOverride:
          type: object
          properties:
            complex_field_element_id:
              type: string
            default_value:
              type: string
            display_context:
              type: string
            hint_text:
              type: string
            label:
              type: string
            retain_hidden_value:
              type: boolean
            show_condition:
              type: string
          title: WizardPageComplexFieldOverride
        WizardPageField:
          type: object
          properties:
            case_field_id:
              type: string
            complex_field_overrides:
              type: array
              items:
                $ref: "#/components/schemas/WizardPageComplexFieldOverride"
            order:
              type: integer
              format: int32
            page_column_no:
              type: integer
              format: int32
          title: WizardPageField
        WorkBasketResult:
          type: object
          properties:
            case_type_id:
              type: string
            fields:
              type: array
              items:
                $ref: "#/components/schemas/WorkBasketResultField"
          title: WorkBasketResult
        WorkBasketResultField:
          type: object
          properties:
            case_field_element_path:
              type: string
            case_field_id:
              type: string
            case_type_id:
              type: string
            display_context_parameter:
              type: string
            label:
              type: string
            metadata:
              type: boolean
            order:
              type: integer
              format: int32
            role:
              type: string
            sort_order:
              $ref: "#/components/schemas/SortOrder"
          title: WorkBasketResultField
        WorkbasketInputDefinition:
          type: object
          properties:
            case_type_id:
              type: string
            fields:
              type: array
              items:
                $ref: "#/components/schemas/WorkbasketInputField"
          title: WorkbasketInputDefinition
        WorkbasketInputField:
          type: object
          properties:
            case_field_element_path:
              type: string
            case_field_id:
              type: string
            display_context_parameter:
              type: string
            label:
              type: string
            order:
              type: integer
              format: int32
            role:
              type: string
            show_condition:
              type: string
          title: WorkbasketInputField
