{
  "swagger": "2.0",
  "info": {
    "description": "Log and Audit Back-End API, used for auditing case searches and actions.",
    "version": "0.1",
    "title": "LAU Back-End API",
    "contact": {},
    "license": {
      "name": "REFORM Common Components"
    }
  },
  "host": "localhost:4550",
  "basePath": "/",
  "tags": [
    {
      "name": "Case action database operations.",
      "description": "Case Action Controller"
    },
    {
      "name": "Case search database operations.",
      "description": "Case Search Controller"
    },
    {
      "name": "root-controller",
      "description": "Root Controller"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "root-controller"
        ],
        "summary": "welcome",
        "operationId": "welcomeUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/audit/caseAction": {
      "get": {
        "tags": [
          "Case action database operations.",
          "GET end-points"
        ],
        "summary": "Retrieve case action audits",
        "description": "This operation will query and return a list of case actions based on the search conditions provided in the URL path.",
        "operationId": "getCaseActionUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "caseJurisdictionId",
            "in": "query",
            "description": "Case Jurisdiction ID",
            "required": false,
            "type": "string",
            "x-example": "PROBATE"
          },
          {
            "name": "caseRef",
            "in": "query",
            "description": "Case Reference ID",
            "required": false,
            "type": "string",
            "x-example": "1615817621013640"
          },
          {
            "name": "caseTypeId",
            "in": "query",
            "description": "Case Type ID",
            "required": false,
            "type": "string",
            "x-example": "GrantOfRepresentation"
          },
          {
            "name": "endTimestamp",
            "in": "query",
            "description": "End Timestamp",
            "required": false,
            "type": "string",
            "x-example": "2021-08-23T22:20:05"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "required": false,
            "type": "string",
            "x-example": "500"
          },
          {
            "name": "startTimestamp",
            "in": "query",
            "description": "Start Timestamp",
            "required": false,
            "type": "string",
            "x-example": "2021-06-23T22:20:05"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User ID",
            "required": false,
            "type": "string",
            "x-example": "3748238"
          }
        ],
        "responses": {
          "200": {
            "description": "Request executed successfully. Response contains of case view logs",
            "schema": {
              "$ref": "#/definitions/CaseActionGetResponse"
            }
          },
          "400": {
            "description": "Missing userId, caseTypeId, caseJurisdictionId, caseRef, startTimestamp or endTimestamp parameters.",
            "schema": {
              "$ref": "#/definitions/CaseActionGetResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/CaseActionGetResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Case action database operations.",
          "POST end-points"
        ],
        "summary": "Save case action audits",
        "description": "This operation will persist CCD case action entries which are posted in the request. Single CaseAction per request will be stored in the database.",
        "operationId": "saveCaseActionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "caseActionPostRequest",
            "description": "caseActionPostRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CaseActionPostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaseActionPostResponse"
            }
          },
          "201": {
            "description": "Created actionLog case response - includes caseActionId from DB.",
            "schema": {
              "$ref": "#/definitions/CaseActionPostResponse"
            }
          },
          "400": {
            "description": "Invalid case action",
            "schema": {
              "$ref": "#/definitions/CaseActionPostResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/CaseActionPostResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/CaseActionPostResponse"
            }
          }
        }
      }
    },
    "/audit/caseSearch": {
      "get": {
        "tags": [
          "Case search database operations.",
          "GET end-points"
        ],
        "summary": "Retrieve case search audits",
        "description": "This operation will query and return a list of case searches based on the search conditions provided in the URL path.",
        "operationId": "getCaseSearchUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "caseRef",
            "in": "query",
            "description": "Case Reference ID",
            "required": false,
            "type": "string",
            "x-example": "1615817621013640"
          },
          {
            "name": "endTimestamp",
            "in": "query",
            "description": "End Timestamp",
            "required": false,
            "type": "string",
            "x-example": "2021-08-23T22:20:05"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size",
            "required": false,
            "type": "string",
            "x-example": "500"
          },
          {
            "name": "startTimestamp",
            "in": "query",
            "description": "Start Timestamp",
            "required": false,
            "type": "string",
            "x-example": "2021-06-23T22:20:05"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User ID",
            "required": false,
            "type": "string",
            "x-example": "3748238"
          }
        ],
        "responses": {
          "200": {
            "description": "Request executed successfully. Response contains of case search logs",
            "schema": {
              "$ref": "#/definitions/CaseSearchGetResponse"
            }
          },
          "400": {
            "description": "Missing userId, caseRef, startTimestamp or endTimestamp parameters.",
            "schema": {
              "$ref": "#/definitions/CaseSearchGetResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/CaseSearchGetResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Case search database operations.",
          "POST end-points"
        ],
        "summary": "Save case search audits",
        "description": "This operation will persist CCD case search entries which are posted in the request. Single CaseSearch per request will be stored in the database.",
        "operationId": "saveCaseSearchUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "caseSearchPostRequest",
            "description": "caseSearchPostRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CaseSearchPostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaseSearchPostRequest"
            }
          },
          "201": {
            "description": "Created SearchLog case response - includes caseSearchId from DB.",
            "schema": {
              "$ref": "#/definitions/CaseSearchPostResponse"
            }
          },
          "400": {
            "description": "Invalid case search",
            "schema": {
              "$ref": "#/definitions/CaseSearchPostResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/CaseSearchPostResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/CaseSearchPostResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActionLog": {
      "type": "object",
      "properties": {
        "caseAction": {
          "type": "string",
          "description": "The action carried out on the case, i.e. CREATE, UPDATE, VIEW"
        },
        "caseJurisdictionId": {
          "type": "string",
          "description": "The Jurisdiction Id of the case affected by the action"
        },
        "caseRef": {
          "type": "string",
          "description": "The caseRef effected by the action"
        },
        "caseTypeId": {
          "type": "string",
          "description": "The Case Type Id of the case affected by the action"
        },
        "timestamp": {
          "type": "string",
          "description": "When the operation took place with microseconds in iso-8601-date-and-time-format"
        },
        "userId": {
          "type": "string",
          "description": "The user on whose behalf the operation took place"
        }
      },
      "title": "ActionLog",
      "description": "Data model for the case action log"
    },
    "ActionLogPostResponse": {
      "type": "object",
      "properties": {
        "caseAction": {
          "type": "string"
        },
        "caseActionId": {
          "type": "string"
        },
        "caseJurisdictionId": {
          "type": "string"
        },
        "caseRef": {
          "type": "string"
        },
        "caseTypeId": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "ActionLogPostResponse"
    },
    "CaseActionGetResponse": {
      "type": "object",
      "properties": {
        "actionLog": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionLog"
          }
        },
        "moreRecords": {
          "type": "boolean",
          "description": "Indicates whether there are more records beyond the current page in the full result set"
        },
        "startRecordNumber": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the first record out of the full result set provided in the result set"
        }
      },
      "title": "CaseActionGetResponse",
      "description": "Case Action GET Response"
    },
    "CaseActionPostRequest": {
      "type": "object",
      "properties": {
        "actionLog": {
          "$ref": "#/definitions/ActionLog"
        }
      },
      "title": "CaseActionPostRequest"
    },
    "CaseActionPostResponse": {
      "type": "object",
      "properties": {
        "actionLog": {
          "$ref": "#/definitions/ActionLogPostResponse"
        }
      },
      "title": "CaseActionPostResponse"
    },
    "CaseSearchGetResponse": {
      "type": "object",
      "properties": {
        "moreRecords": {
          "type": "boolean",
          "description": "Indicates whether there are more records beyond the current page in the full result set"
        },
        "searchLog": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchLog"
          }
        },
        "startRecordNumber": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the first record out of the full result set provided in the result set"
        }
      },
      "title": "CaseSearchGetResponse",
      "description": "Case Search GET Response"
    },
    "CaseSearchPostRequest": {
      "type": "object",
      "properties": {
        "searchLog": {
          "$ref": "#/definitions/SearchLog"
        }
      },
      "title": "CaseSearchPostRequest"
    },
    "CaseSearchPostResponse": {
      "type": "object",
      "properties": {
        "searchLog": {
          "$ref": "#/definitions/CaseSearchPostResponse"
        }
      },
      "title": "CaseSearchPostResponse"
    },
    "SearchLog": {
      "type": "object",
      "properties": {
        "caseRefs": {
          "type": "array",
          "description": "The caseRefs effected by the search operation",
          "items": {
            "type": "string"
          }
        },
        "timestamp": {
          "type": "string",
          "description": "When the operation took place with microseconds in iso-8601-date-and-time-format"
        },
        "userId": {
          "type": "string",
          "description": "The user on whose behalf the operation took place"
        }
      },
      "title": "SearchLog",
      "description": "Data model for the case search log"
    }
  }
}
