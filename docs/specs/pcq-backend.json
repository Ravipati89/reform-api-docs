{
  "swagger": "2.0",
  "info": {
    "description": "This is the Protected Characteristics Back-End API that will:\n\n- Save user's answers to the database.\n- Serve the consolidation service to fetch PCQ Ids that don't have an associated case record and add case information to a PCQ record in the database.\n- Serve authentication tasks for other services and components to generate a Service SAS token for the PCQ Storage Account container 'pcq' - this will provide Write, List and Create access.",
    "version": "1.0",
    "title": "PCQ Back-End APIs",
    "contact": {},
    "license": {
      "name": "Reform Common Components"
    }
  },
  "host": "pcq-backend-aat.service.core-compute-aat.internal",
  "basePath": "/",
  "tags": [
    {
      "name": "PCQ BackEnd - API for PCQ database operations.",
      "description": "Pcq Answers Controller"
    },
    {
      "name": "PCQ BackEnd - API for SAS token service operations.",
      "description": "Sas Token Controller"
    },
    {
      "name": "PCQ BackEnd - API for consolidation service operations.",
      "description": "Consolidation Controller"
    },
    {
      "name": "root-controller",
      "description": "Root Controller"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "root-controller"
        ],
        "summary": "welcome",
        "operationId": "welcomeUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/pcq/backend/consolidation/addCaseForPCQ/{pcqId}": {
      "put": {
        "tags": [
          "PCQ BackEnd - API for consolidation service operations.",
          "PUT end-points"
        ],
        "summary": "Add case information on a PCQ answers record.",
        "description": "This API will be invoked by the Consolidation process to to update the case information ( case id ) on the PCQ answers record. ",
        "operationId": "addCaseForPcqUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "caseId",
            "description": "caseId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pcqId",
            "in": "path",
            "description": "pcqId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request executed successfully. Case Id successfully added to the PCQ Answers record.",
            "schema": {
              "$ref": "#/definitions/SubmitResponse"
            }
          },
          "400": {
            "description": "The supplied input parameters are not in the acceptable format. The user will be returned a standard error message.",
            "schema": {
              "$ref": "#/definitions/SubmitResponse"
            }
          },
          "500": {
            "description": "General/Un-recoverable error.",
            "schema": {
              "$ref": "#/definitions/SubmitResponse"
            }
          }
        }
      }
    },
    "/pcq/backend/consolidation/pcqRecordWithoutCase": {
      "get": {
        "tags": [
          "GET end-points",
          "PCQ BackEnd - API for consolidation service operations."
        ],
        "summary": "Get list of PCQ Record that don't have associated case information.",
        "description": "This API will be invoked by the Consolidation process to get a list of PCQ records that don’t have an associated case. Any PCQ answer records which are over 90 days old will not be returned in the list. The PCQ Answer response will contain the PCQ Id, Service Id and Actor only.",
        "operationId": "getPcqRecordWithoutCaseUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request executed successfully. Response will contain the multiple/single PCQ Record(s)/ empty array",
            "schema": {
              "$ref": "#/definitions/PcqRecordWithoutCaseResponse"
            }
          },
          "400": {
            "description": "Missing co-relation Id information in the header."
          },
          "500": {
            "description": "Any general application/database un-recoverable error"
          }
        }
      }
    },
    "/pcq/backend/consolidation/pcqWithoutCase": {
      "get": {
        "tags": [
          "GET end-points",
          "PCQ BackEnd - API for consolidation service operations."
        ],
        "summary": "Get list of PCQ Ids that don't have associated case information.",
        "description": "This API will be invoked by the Consolidation process to get a list of PCQ records that don’t have an associated case. Any PCQ answer records which are over 90 days old will not be returned in the list.",
        "operationId": "getPcqIdsWithoutCaseUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request executed successfully. Response will contain the multiple/single PCQ Id(s)/ empty array",
            "schema": {
              "$ref": "#/definitions/PcqWithoutCaseResponse"
            }
          },
          "400": {
            "description": "Missing co-relation Id information in the header."
          },
          "500": {
            "description": "Any general application/database un-recoverable error"
          }
        },
        "deprecated": true
      }
    },
    "/pcq/backend/deletePcqRecord/{pcqId}": {
      "delete": {
        "tags": [
          "DELETE end-points",
          "PCQ BackEnd - API for PCQ database operations."
        ],
        "summary": "Delete PCQ Record from the database.",
        "description": "This API will delete a record from the PCQ database for the given PCQId. It is intended to be called from the test api for testing purposes.",
        "operationId": "deletePcqRecordUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pcqId",
            "in": "path",
            "description": "pcqId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pcq record has been deleted",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "An invalid id was provided"
          },
          "404": {
            "description": "No pcq answer record was found with the given id"
          }
        }
      }
    },
    "/pcq/backend/getAnswer/{pcqId}": {
      "get": {
        "tags": [
          "GET end-points",
          "PCQ BackEnd - API for PCQ database operations."
        ],
        "summary": "Get PCQ answer from the database.",
        "description": "This API will return a record from the PCQ database for the given PCQId. It is intended to be called from the test api for testing purposes.",
        "operationId": "getAnswersByPcqIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pcqId",
            "in": "path",
            "description": "pcqId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the pcq answer record",
            "schema": {
              "$ref": "#/definitions/PcqAnswerResponse"
            }
          },
          "400": {
            "description": "An invalid id was provided"
          },
          "404": {
            "description": "No pcq answer record was found with the given id"
          }
        }
      }
    },
    "/pcq/backend/submitAnswers": {
      "post": {
        "tags": [
          "PCQ BackEnd - API for PCQ database operations.",
          "POST end-points"
        ],
        "summary": "Add and update PCQ answers to the database.",
        "description": "This API will create a new record in the database for the given PCQId where none exists and will update an existing record with the answers as submitted by the users",
        "operationId": "submitAnswersUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "answerRequest",
            "description": "answerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PcqAnswerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubmitResponse"
            }
          },
          "201": {
            "description": "Successfully saved to database.",
            "schema": {
              "$ref": "#/definitions/SubmitResponse"
            }
          },
          "202": {
            "description": "Request valid but stale.",
            "schema": {
              "$ref": "#/definitions/SubmitResponse"
            }
          },
          "400": {
            "description": "Request failed schema validation.",
            "schema": {
              "$ref": "#/definitions/SubmitResponse"
            }
          },
          "403": {
            "description": "Version number mismatch.",
            "schema": {
              "$ref": "#/definitions/SubmitResponse"
            }
          },
          "500": {
            "description": "General/Un-recoverable error.",
            "schema": {
              "$ref": "#/definitions/SubmitResponse"
            }
          }
        }
      }
    },
    "/pcq/backend/token/bulkscan": {
      "get": {
        "tags": [
          "GET end-points",
          "PCQ BackEnd - API for SAS token service operations."
        ],
        "summary": "Endpoint for BulkScan to generate the PCQ Storage SAS token.",
        "description": "This API will be invoked by the Bulk Scan Processor to generate an Azure Service SAS token to allowthe upload of paper PCQ envelops to the PCQ Blob Storage 'pcq' container.",
        "operationId": "generateBulkScanSasTokenUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ServiceAuthorization",
            "in": "header",
            "description": "ServiceAuthorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generated Storage Account SAS token for BulkScan.",
            "schema": {
              "$ref": "#/definitions/SasTokenResponse"
            }
          },
          "401": {
            "description": "ServiceAuthorization header invalid or expired."
          },
          "404": {
            "description": "Service or path not found."
          },
          "500": {
            "description": "Server error, unable to generate SAS token."
          }
        }
      }
    }
  },
  "definitions": {
    "PcqAnswerRequest": {
      "type": "object",
      "properties": {
        "actor": {
          "type": "string"
        },
        "ccdCaseId": {
          "type": "string"
        },
        "channel": {
          "type": "integer",
          "format": "int32"
        },
        "completedDate": {
          "type": "string"
        },
        "dcnNumber": {
          "type": "string"
        },
        "formId": {
          "type": "string"
        },
        "optOut": {
          "type": "string"
        },
        "partyId": {
          "type": "string"
        },
        "pcqAnswers": {
          "$ref": "#/definitions/PcqAnswers"
        },
        "pcqId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "versionNo": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PcqAnswerRequest"
    },
    "PcqAnswerResponse": {
      "type": "object",
      "properties": {
        "actor": {
          "type": "string"
        },
        "ccdCaseId": {
          "type": "string"
        },
        "channel": {
          "type": "integer",
          "format": "int32"
        },
        "completedDate": {
          "type": "string"
        },
        "dcnNumber": {
          "type": "string"
        },
        "formId": {
          "type": "string"
        },
        "partyId": {
          "type": "string"
        },
        "pcqAnswers": {
          "$ref": "#/definitions/PcqAnswers"
        },
        "pcqId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "versionNo": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PcqAnswerResponse"
    },
    "PcqAnswers": {
      "type": "object",
      "properties": {
        "disability_conditions": {
          "type": "integer",
          "format": "int32"
        },
        "disability_dexterity": {
          "type": "integer",
          "format": "int32"
        },
        "disability_hearing": {
          "type": "integer",
          "format": "int32"
        },
        "disability_impact": {
          "type": "integer",
          "format": "int32"
        },
        "disability_learning": {
          "type": "integer",
          "format": "int32"
        },
        "disability_memory": {
          "type": "integer",
          "format": "int32"
        },
        "disability_mental_health": {
          "type": "integer",
          "format": "int32"
        },
        "disability_mobility": {
          "type": "integer",
          "format": "int32"
        },
        "disability_none": {
          "type": "integer",
          "format": "int32"
        },
        "disability_other": {
          "type": "integer",
          "format": "int32"
        },
        "disability_other_details": {
          "type": "string"
        },
        "disability_social": {
          "type": "integer",
          "format": "int32"
        },
        "disability_stamina": {
          "type": "integer",
          "format": "int32"
        },
        "disability_vision": {
          "type": "integer",
          "format": "int32"
        },
        "dob": {
          "type": "string"
        },
        "dob_provided": {
          "type": "integer",
          "format": "int32"
        },
        "english_language_level": {
          "type": "integer",
          "format": "int32"
        },
        "ethnicity": {
          "type": "integer",
          "format": "int32"
        },
        "ethnicity_other": {
          "type": "string"
        },
        "gender_different": {
          "type": "integer",
          "format": "int32"
        },
        "gender_other": {
          "type": "string"
        },
        "language_main": {
          "type": "integer",
          "format": "int32"
        },
        "language_other": {
          "type": "string"
        },
        "marriage": {
          "type": "integer",
          "format": "int32"
        },
        "opt_out": {
          "type": "boolean"
        },
        "pregnancy": {
          "type": "integer",
          "format": "int32"
        },
        "religion": {
          "type": "integer",
          "format": "int32"
        },
        "religion_other": {
          "type": "string"
        },
        "sex": {
          "type": "integer",
          "format": "int32"
        },
        "sexuality": {
          "type": "integer",
          "format": "int32"
        },
        "sexuality_other": {
          "type": "string"
        }
      },
      "title": "PcqAnswers"
    },
    "PcqRecordWithoutCaseResponse": {
      "type": "object",
      "properties": {
        "pcqRecord": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PcqAnswerResponse"
          }
        },
        "responseStatus": {
          "type": "string"
        },
        "responseStatusCode": {
          "type": "string"
        }
      },
      "title": "PcqRecordWithoutCaseResponse"
    },
    "PcqWithoutCaseResponse": {
      "type": "object",
      "properties": {
        "pcqId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responseStatus": {
          "type": "string"
        },
        "responseStatusCode": {
          "type": "string"
        }
      },
      "title": "PcqWithoutCaseResponse"
    },
    "SasTokenResponse": {
      "type": "object",
      "properties": {
        "sas_token": {
          "type": "string"
        }
      },
      "title": "SasTokenResponse"
    },
    "SubmitResponse": {
      "type": "object",
      "properties": {
        "pcqId": {
          "type": "string"
        },
        "responseStatus": {
          "type": "string"
        },
        "responseStatusCode": {
          "type": "string"
        }
      },
      "title": "SubmitResponse"
    }
  }
}
